#!/bin/bash

############################################################################
#                        USAGE                                             #
############################################################################
	usage="
	$(basename "$0") [options] <sample_name>
	
	The sample name must correspond to the prefix of the fastq files generated by CellRanger

	options:
	    -h Show this help text
            -t <int>  Number of threads
            -q <int>  Mapping quality of the reads to analyze
	    -b <int>  Base quality of the reads to analyze
	    -i <path> Path to the folder containing the input data
	    -r <path> Path to the reference genome with masked NuMTs
	    -o <path> Path to the results folder  
            -N Do not run cellranger - use a bam file as input instead
            -m <bcall|call|tenx> mgatk mode
	    -g <STRING> name of the genome
	    -e <STRING> Tag specifying sample names (BC or RG)
            -c <STRING> mitochondrial contig name if different from MT or chrM
        
	Note: the bam file must be indexed and fastq files must be .gz compressed
	"

############################################################################
#                        DEFAULT VAriABLES                                 #
############################################################################


	THREADS=4
	MAPQUAL=20
	BASEQUAL=20
        INDIR="."
        REFDIR=""
        OUTDIR=${CELLRANGERDIR}/mitog
	GENOME='hg38'
        MT_REGEX='^(MT|chrM)'
	CELL_TAG='BC'
        MAPPING='YES'
	MGATKMODE='tenx'
        isanum='^[0-9]+$'
	SCRIPTDIR=$(dirname "${BASH_SOURCE[0]}")


############################################################################
#                  Update argument values                                  #
############################################################################


        # The : before the flags is for taking control of flags that are not in the list
	# If the arguments expect an input of any kind then add ":" right after
	while getopts ':ht:q:i:r:o:Nm:g:e:c::' option; do
	  case "$option" in
	    h) echo "$usage"
	       exit
	       ;;
            t) THREADS=$OPTARG
               if [[ ! $THREADS =~ $isanum ]]; then
                  printf "\nError: -t must be a positive whole number\n"
                  echo "$usage" >&2
                  exit 1
               fi
               ;;
            q) MAPQUAL=$OPTARG
               if [[ ! $MAPQUAL =~ $isanum ]]; then
               	  printf "\nError: -q must be a positive whole number\n"
                  echo "$usage" >&2
                  exit 1
               fi
               ;;
            b) BASEQUAL=$OPTARG
               if [[ ! $BASEQUAL =~ $isanum ]]; then
                  printf "\nError: -b must be a positive whole number\n"
                  echo "$usage" >&2
                  exit 1
               fi
               ;;
            i) INDIR=$(echo ${OPTARG} | sed 's/\/$//')
	       if [ ! -d ${INDIR} ];then
                   printf "\nError: $OPTARG does not exist\n"
                   echo "$usage" >&2
                   exit 1
	       fi
               ;;
	    o) OUTDIR=$(echo ${OPTARG} | sed 's/\/$//')
	       ;;
	    r) REFDIR=$(echo ${OPTARG} | sed 's/\/$//')
               if [ ! -d ${REFDIR} ];then
                   printf "\nError: $OPTARG does not exist\n"
                   echo "$usage" >&2
                   exit 1
               fi
	       ;;
            N) MAPPING="NO"
	       ;;
            m) MGATKMODE=$OPTARG
               modes='(call|bcall|tenx|check|support)'
               if [[ ! "$MGATKMODE" =~ $modes ]];then
                   printf "\nError: $OPTARG is not a suitable mgatk mode\n"
                   echo "$usage" >&2
                   exit 1
               fi
	       ;;
	    c) MT_REGEX='^'${OPTARG}
               ;;
            g) GENOME=$OPTARG
               ;;
	    e) CELL_TAG=$OPTARG
	       ;;
	    :) printf "missing argument for -%s\n" "$OPTARG"
	       echo "$usage" >&2
	       exit 1
	       ;;
	    \?) printf "illegal option: -%s\n" "$OPTARG"
	       echo "$usage" >&2
	       exit 1
	       ;;
	  esac
	done
	shift $((OPTIND - 1))



if [ "$#" -gt 1 ]; then
    printf "\nIncorrect number of arguments\n" >&2
    echo "$usage" >&2
    exit 1
fi

# mandatory arguments
if [ "$#" -eq 1 ]; then
	SAMPLE="$1"

	printf "\nAnalyzing sample "$SAMPLE"\n\n"
else
        printf "\nYou must provide at least the name of a file as input\n" >&2
        echo "$usage" >&2
	exit 1
fi



############################################################################
#                        LOAD MODULES                                      #
############################################################################
	
	module purge 2> /dev/null
	module load java/1.9 2> /dev/null
	module load miniconda2/4.4.10 2> /dev/null
	module load cellranger-atac/1.2.0 2> /dev/null
	source activate /gpfs/commons/groups/landau_lab/tprieto/conda/mgatk 2> /dev/null


if [ $MAPPING == "YES" ]; then

	CELLRANGERDIR=${INDIR}/cellranger_${SAMPLE}/outs/

	cellranger-atac count --id="cellranger_"$SAMPLE \
		--reference=${REFDIR} \
		--localcores=${THREADS} \
		--fastqs=${INDIR}/ \
		--sample=${SAMPLE} > ${INDIR}/Log.${SAMPLE}.txt

        # -o WORKDIR is not working when there are two forward slash on the path name
        # The tenth column within the singlecell.csv cell range output file contains
        # a binary indicator of whether barcode is associated with a cell
        awk 'BEGIN { FS = "," }{print $1"\t"$10}' ${CELLRANGERDIR}/singlecell.csv  | \
        awk '{if ($2==1){print $1}}' > ${CELLRANGERDIR}/barcodes.${SAMPLE}.txt

        CELLRANGERDIR=${INDIR}/cellranger_${SAMPLE}/outs/
        mgatk ${MGATKMODE} \
                -i ${CELLRANGERDIR}/possorted_bam.bam \
                --mito-genome $GENOME \
                -o ${OUTDIR} \
                --ncores $THREADS \
                -bt CB \
                -b ${CELLRANGERDIR}/barcodes.${SAMPLE}.txt \
                --alignment-quality $MAPQUAL \
                --emit-base-qualities \
                --base-qual $BASEQUAL

else


        mgatk ${MGATKMODE} \
                -i ${INDIR}/${SAMPLE}.bam \
                --mito-genome $GENOME \
                --ncores $THREADS \
	        -o $OUTDIR \
                -bt $CELL_TAG -mb 1 \
                --alignment-quality $MAPQUAL \
                --emit-base-qualities \
                --base-qual $BASEQUAL

fi


source deactivate 2> /dev/null
echo "> Finished!"
